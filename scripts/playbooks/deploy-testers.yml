- hosts: testers
  vars_prompt:
    - name: instance_name
      prompt: "The instance name"
      default: patchew-tester
      private: no
    - name: "patchew_server"
      prompt: "The address of patchew server"
      default: "https://patchew.org"
      private: no
    - name: "tester_user"
      prompt: "Username for the tester to login to the server"
      private: no
      default: "tester"
    - name: "tester_pass"
      prompt: "Password for the tester to login to the server"
      private: yes
    - name: "tester_project"
      prompt: "Project name to test"
      private: no
    - name: "cron_user"
      prompt: "User that will run the tests on the host"
      default: patchew
      private: no
  vars:
    base_dir: "{{ instance_name }}"
    dest_base_dir: "~{{ cron_user }}/{{ base_dir }}"
    patchew_cmd: "{{ base_dir }}/src/patchew-cli -s {{ patchew_server }}"
  tasks:
    - debug:
        msg: Patchew tester deploy starting
    - name: "Ensure user {{ cron_user }} exists"
      user:
        name: "{{ cron_user }}"
        shell: /bin/bash
        state: present
    - name: Create patchew data folder
      become: yes
      become_user: "{{ cron_user }}"
      file:
        path: "{{ dest_base_dir }}"
        state: directory
    - name: Copy source
      remote_user: "{{ cron_user }}"
      synchronize:
        src: ../../../
        dest: "{{ dest_base_dir }}/src"
        recursive: true
        group: no
        owner: no
        delete: yes
        rsync_opts:
          - "--exclude=*.pyc"
          - "--exclude=*.swp"
          - "--exclude=/venv"
    - name: Generate password file
      become: yes
      become_user: "{{ cron_user }}"
      shell: "cd ~{{ cron_user }} && echo {{ tester_pass }} > {{ base_dir }}/patchew-tester-pass"
    - name: Login with patchew-cli
      become: yes
      become_user: "{{ cron_user }}"
      shell: "cd ~{{ cron_user }} && {{ patchew_cmd }} login {{ tester_user }} $(cat {{ base_dir }}/patchew-tester-pass)"
    - name: Logout with patchew-cli
      become: yes
      become_user: "{{ cron_user }}"
      shell: "cd ~{{ cron_user }} && {{ patchew_cmd }} logout"
    - cron:
        name: "Patchew tester {{ instance_name }}"
        user: "{{ cron_user }}"
        minute: "*/10"
        job: "{ {{ patchew_cmd }} login {{ tester_user }} $(cat {{ base_dir }}/patchew-tester-pass); {{ patchew_cmd }} tester --name {{ instance_name }} --singleton -p {{ tester_project }}; } >>{{ base_dir }}/log 2>&1"
